FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04

ENV DEBIAN_FRONTEND=noninteractive
ENV OPENCV_VERSION=4.5.0

ARG ROS_PKG=ros_base
ENV ROS_DISTRO=foxy
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}



#Development tools
#https://stackoverflow.com/questions/32486779/apt-add-repository-command-not-found-error-in-dockerfile
RUN apt-get update && \
    apt-get install -y software-properties-common && \
    rm -rf /var/lib/apt/lists/*


RUN apt-get update &&  add-apt-repository ppa:ubuntu-toolchain-r/test &&\
	apt-get update && apt -y install gcc-9 && rm -rf /var/lib/apt/lists/*


#ENV CXX="g++-9" 
#ENV CC="gcc-9"

RUN apt-get update && apt-get install -y g++ rsync zip openssh-server make \
	cmake git wget  && rm -rf /var/lib/apt/lists/*

# networking tools

RUN apt-get update && apt-get install -y net-tools curl \
    && rm -rf /var/lib/apt/lists/*


# IDE
# TODO: add Jupyter Notebook

RUN apt-get update && apt-get install -y vim  && rm -rf /var/lib/apt/lists/*


# My utilities

RUN  apt-get update && apt-get upgrade -y &&\
    # Install build tools, build dependencies and python
    apt-get install -y \
	    python-pip \
        build-essential \
        unzip \
        yasm \
        pkg-config \
        libswscale-dev \
        libtbb2 \
        libtbb-dev \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        libavformat-dev \
        libpq-dev \
        libxine2-dev \
        libglew-dev \
        libtiff5-dev \
        zlib1g-dev \
        libjpeg-dev \
        libavcodec-dev \
        libavformat-dev \
        libavutil-dev \
        libpostproc-dev \
        libswscale-dev \
        libeigen3-dev \
        libtbb-dev \
        libgtk2.0-dev \
	libceres-dev \
        pkg-config \
        python-dev \
        python-numpy \
        python3-dev \
        python3-numpy && \
      rm -rf /var/lib/apt/lists/*


RUN apt-get update && apt-get -y install libeigen3-dev \
  && rm -rf /var/lib/apt/lists/*



#install pangolin
RUN apt-get update && git clone https://github.com/stevenlovegrove/Pangolin.git \
	&& cd Pangolin && mkdir -p build && cd build && cmake .. && make install -j8 \
	&& cd - && rm -rf /var/lib/apt/lists/*


# ros2 layer
    
RUN locale  && apt-get update && \
	 apt-get install locales\ 
	 && locale-gen en_US en_US.UTF-8\
         &&  update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\
         && export LANG=en_US.UTF-8 && locale \ 
         && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y curl gnupg2 lsb-release && \	
	curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - &&\
	echo "deb [arch=$(dpkg --print-architecture)] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list 


RUN apt-get update && apt-get -y install ros-eloquent-desktop	&& rm -rf /var/lib/apt/lists/*



#RUN apt-get update && pip install tensorflow torch \
#	&& rm -rf /var/lib/apt/lists/* 



ARG UNAME=light
ARG UID=1000
ARG GID=1000
RUN groupadd -g $GID -o $UNAME
RUN useradd -m -u $UID -g $GID -o -s /bin/bash $UNAME
echo light | passwd light --stdin
USER $UNAME
